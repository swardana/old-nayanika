<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.swardana.nayanika</groupId>
    <artifactId>nayanika</artifactId>
    <version>1.0.0</version>

    <packaging>jar</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>Nayanika is a picture viewer application</description>
    <inceptionYear>2021</inceptionYear>

    <licenses>
        <license>
            <name>GPL-3.0-or-later</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>swardana</id>
            <name>Sukma Wardana</name>
            <email>swardana@tutanota.com</email>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/swardana/nayanika</url>
        <connection>scm:git:https://github.com/swardana/nayanika.git</connection>
        <developerConnection>scm:git:git@github.com:swardana/nayanika.git</developerConnection>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>16</maven.compiler.release>

        <!-- For Maven Exec Plugin -->
        <module.name>com.swardana.nayanika</module.name>
        <class.name>com.swardana.nayanika.NayanikaApp</class.name>

        <!-- For version.properties file -->
        <build.number>${maven.build.timestamp}</build.number>
        <!--
            This converts the build timestamp to a year, month and week information.
            e.g. release at July 28, 2021 then the build number is 217.31.
              - yy: the last two digits of the year
              - M : month in year
              - w : week in year
            Note that Maven generated timestamp is in UTC, not local time. For more information see:
                https://docs.microsoft.com/en-us/windows/win32/msi/productversion
                https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/text/SimpleDateFormat.html
         -->
        <maven.build.timestamp.format>yyM.w</maven.build.timestamp.format>

        <!-- For jpackage arguments -->
        <!--
            Replace this UUID with a custom one for your project. This ID is used by the Windows installer system
            to know that an installer is intended to replace/upgrade an earlier version. The easiest thing to do is
            grab a unique UUID via https://www.uuidgenerator.net
        -->
        <windows.upgrade.uuid>98e98f2c-03fe-49e1-b00d-465568101b60</windows.upgrade.uuid>
        <vendor>Sukma Wardana</vendor>
        <copyright>Copyright Â© 2021 Sukma Wardana</copyright>
        <machine.arch>x86_64</machine.arch>

        <!-- For MANIFEST.MF -->
        <app.name>com/swardana/nayanika</app.name>
        <app.title>Nayanika</app.title>

        <!-- Apache Maven & Plugins -->
        <maven.version>3.8.1</maven.version>
        <!-- Core plugins -->
        <maven.clean.version>3.1.0</maven.clean.version>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.deploy.version>3.0.0-M1</maven.deploy.version>
        <maven.install.version>3.0.0-M1</maven.install.version>
        <maven.resources.version>3.2.0</maven.resources.version>
        <maven.site.version>3.9.1</maven.site.version>
        <maven.surefire.version>3.0.0-M5</maven.surefire.version>
        <maven.failsafe.version>3.0.0-M5</maven.failsafe.version>
        <!-- Packaging plugins -->
        <maven.jar.version>3.2.0</maven.jar.version>
        <maven.source.version>3.2.1</maven.source.version>
        <!-- Reporting plugins -->
        <maven.javadoc.version>3.2.0</maven.javadoc.version>
        <maven.project.info-reports.version>3.1.2</maven.project.info-reports.version>
        <maven.surefire.report.version>3.0.0-M5</maven.surefire.report.version>
        <maven.checkstyle.version>3.1.2</maven.checkstyle.version>
        <!-- Tools plugins -->
        <maven.dependency.version>3.1.2</maven.dependency.version>
        <maven.enforcer.version>3.0.0-M1</maven.enforcer.version>
        <maven.gpg.version>3.0.1</maven.gpg.version>

        <jacoco.version>0.8.7</jacoco.version>
        <checkstyle.version>8.36</checkstyle.version>
        <maven.exec.version>3.0.0</maven.exec.version>

        <!-- test dependencies -->
        <junit.jupiter.version>5.7.1</junit.jupiter.version>
        <junit.jupiter.params.version>5.7.1</junit.jupiter.params.version>
        <assertj.version>3.19.0</assertj.version>
        <mockito.version>3.9.0</mockito.version>

        <!-- dependencies -->
        <jfx.version>16</jfx.version>
        <mangata.metro.version>1.0.0</mangata.metro.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.params.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${jfx.version}</version>
        </dependency>
        <dependency>
            <groupId>com.swardana.mangata</groupId>
            <artifactId>mangata-metro</artifactId>
            <version>${mangata.metro.version}</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven.clean.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <fork>true</fork>
                    <showWarnings>true</showWarnings>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven.deploy.version}</version>
                <configuration>
                    <!--
                    Skip deploying using maven-deploy-plugin and replace
                    it using nexus-staging-maven-plugin
                    -->
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <configuration>
                    <argLine>${failsafe.jacoco.args}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven.install.version}</version>
                <configuration>
                    <!--
                    This is an app, so we don't want to install it
                    in the local Maven repository
                    -->
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven.site.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <argLine>
                        ${surefire.jacoco.args}
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.base=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.base.gallery=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.base.slideshow=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.control=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.command=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.gui=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.gui.about=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.gui.frame=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.gui.menu=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.gui.menu.menubar=ALL-UNNAMED
                        --add-opens
                            com.swardana.nayanika/com.swardana.nayanika.gui.menu.toolbar=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.version}</version>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                    <archive>
                        <manifestEntries>
                            <Name>${app.name}</Name>
                            <Specification-Title>${app.title}</Specification-Title>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Implementation-Title>${project.artifactId}</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Build-Jdk>${java.version} (${java.vendor} ${java.vm.version})</Build-Jdk>
                            <Build-OS>${os.name} ${os.arch} ${os.version}</Build-OS>
                        </manifestEntries>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <doclint>none</doclint>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>compile</includeScope>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.enforcer.version}</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <DependencyConvergence />
                                <requireJavaVersion>
                                    <version>${maven.compiler.release}</version>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>${maven.version}</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>${maven.gpg.version}</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <gpgArguments>
                        <arg>--pinentry-mode</arg>
                        <arg>loopback</arg>
                    </gpgArguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>before-unit-test-execution</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
                            <propertyName>surefire.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-unit-test-execution</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>before-integration-test-execution</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
                            <propertyName>failsafe.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-integration-test-execution</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-unit-and-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/jacoco-output/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-merged-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <excludes>
                                        <exclude>*Test</exclude>
                                        <exclude>*IT</exclude>
                                    </excludes>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.30</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <suppressionsLocation>suppressions.xml</suppressionsLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven.exec.version}</version>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-Xms64m</argument>
                        <argument>-Xmx256m</argument>
                        <argument>-XX:+UseSerialGC</argument>
                        <argument>--module-path</argument>
                        <modulepath/>
                        <argument>--module</argument>
                        <argument>${module.name}/${class.name}</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
                <configuration>
                    <show>public</show>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven.project.info-reports.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependencies</report>
                            <report>team</report>
                            <report>mailing-lists</report>
                            <report>ci-management</report>
                            <report>issue-management</report>
                            <report>licenses</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven.surefire.report.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    <profiles>
        <profile>
            <id>unix-active</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <platform>linux</platform>
                <icon.path>${project.basedir}/package/icons/icon.png</icon.path>
                <license.file>${project.basedir}/COPYING</license.file>
                <executable>/bin/bash</executable>
                <argument.1/>
                <argument.2>${project.basedir}/package/build-package.sh</argument.2>
                <installer.type>rpm</installer.type>
                <arguments>
                    --linux-package-name ${project.artifactId} ${line.separator}
                    --linux-menu-group Graphics ${line.separator}
                    --linux-app-category graphics ${line.separator}
                    --linux-app-release ${project.version} ${line.separator}
                    --linux-shortcut ${line.separator}
                    --linux-deb-maintainer swardana@tutanota.com ${line.separator}
                    --linux-rpm-license-type GPL-3.0-or-later
                </arguments>
                <temp.dir>${project.build.directory}/installer-work</temp.dir>
            </properties>
        </profile>
        <profile>
            <id>windows-active</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <platform>windows</platform>
                <icon.path>${project.basedir}\package\icons\icon.ico</icon.path>
                <license.file>${project.basedir}\COPYING</license.file>
                <executable>cmd</executable>
                <argument.1>/C</argument.1>
                <argument.2>${project.basedir}\package\build-package.bat</argument.2>
                <installer.type>msi</installer.type>
                <arguments>
                    --win-upgrade-uuid ${windows.upgrade.uuid}
                </arguments>
                <temp.dir>${project.build.directory}\installer-work</temp.dir>
            </properties>
        </profile>
        <profile>
            <id>mac-active</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <platform>macos</platform>
                <icon.path>${project.basedir}/package/icons/icon.icns</icon.path>
                <license.file>${project.basedir}/COPYING</license.file>
                <executable>/bin/bash</executable>
                <argument.1/>
                <argument.2>${project.basedir}/package/build-package.sh</argument.2>
                <installer.type>dmg</installer.type>
                <arguments>
                    --mac-package-identifier ${module.name} ${line.separator}
                    --mac-package-name ${project.artifactId}
                </arguments>
                <temp.dir>${project.build.directory}/installer-work</temp.dir>
            </properties>
        </profile>
        <profile>
            <id>installer</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${maven.exec.version}</version>
                        <executions>
                            <execution>
                                <id>build-package</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>${executable}</executable>
                            <arguments>
                                <argument>${argument.1}</argument>
                                <argument>${argument.2}</argument>
                            </arguments>
                            <environmentVariables>
                                <APP_NAME>${project.artifactId}</APP_NAME>
                                <APP_DESC>${project.description}</APP_DESC>
                                <VENDOR>${vendor}</VENDOR>
                                <COPYRIGHT>${copyright}</COPYRIGHT>
                                <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                                <MAIN_MODULE>${module.name}</MAIN_MODULE>
                                <MAIN_CLASS>${class.name}</MAIN_CLASS>
                                <MAIN_JAR>${project.artifactId}-${project.version}.jar</MAIN_JAR>
                                <ICON_PATH>${icon.path}</ICON_PATH>
                                <LICENSE_FILE>${license.file}</LICENSE_FILE>
                                <INSTALLER_TYPE>${installer.type}</INSTALLER_TYPE>
                                <EXTRA_ARGUMENTS>${arguments}</EXTRA_ARGUMENTS>
                                <ARCH>${machine.arch}</ARCH>
                                <OPERATING_SYSTEM>${platform}</OPERATING_SYSTEM>
                                <BUILD_NUMBER>${build.number}</BUILD_NUMBER>
                                <TEMP_DIR>${temp.dir}</TEMP_DIR>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>