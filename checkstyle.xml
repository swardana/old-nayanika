<?xml version="1.0"?>
<!--
  ~ Nayanika, picture viewer application
  ~ Copyright (C) 2021  Sukma Wardana
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">

    <property name="charset" value="UTF-8"/>

    <!--
    Enforces English locale to be independent from the
    default locale which may vary between environments.
    -->
    <property name="localeLanguage" value="en"/>

    <!--
    Checks that property files contain the same keys.
    -->
    <module name="Translation"/>

    <!-- Excludes all 'module-info.java' files -->
    <!-- See https://checkstyle.org/config_filefilters.html -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!--
    Maximum number of lines in any .java file is limited.
    -->
    <module name="FileLength">
        <property name="max" value="1000"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <!--
    TAB chars are not allowed anywhere.
    -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
        <property name="fileExtensions" value="java,txt,xml,xsl,xsd,properties,groovy,vm,MF,sh,sql,tokens,g,spec,css,csv"/>
    </module>

    <!--
    C++ style inline comment is not allowed.
    -->
    <module name="RegexpSingleline">
        <property name="format" value="/\*.*\*/"/>
        <property name="message" value="This kind of comment is not allowed."/>
    </module>

    <!--
    Windows line endings are not allowed.
    -->
    <module name="RegexpMultiline">
        <property name="format" value="\r\n$"/>
        <property name="message" value="Lines in file should end with Unix-like end of line"/>
    </module>

    <!--
    JavaDoc regexp checks
    -->
    <module name="RegexpSingleline">
        <property name="format" value="/\*\* +[^A-Z\{]"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="First sentence in a comment should start with a capital letter"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="/\*\*\W+\* +[^A-Z\{]"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="First sentence in a comment should start with a capital letter"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="synchronized +\(this\) +\{"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Using THIS as a lock is a bad practice (use class variable instead)"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="synchronized +\([\w\.]\.class\) +\{"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Using class as a lock is a bad practice (use class variable instead)"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="org\.apache\.commons\.(codec|lang3?)\.CharEncoding"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Use 'java.nio.charset.StandardCharsets' instead"/>
    </module>

    <!--
    Maximum line length is 100 characters
    -->
    <module name="LineLength">
        <property name="max" value="100"/>
        <property name="ignorePattern" value="^import .*$|^\s+\*\s.*https?:\/\/.+"/>
    </module>

    <!-- Filter out Checkstyle warnings that have been suppressed with the @SuppressWarnings annotation -->
    <module name="SuppressWarningsFilter" />

    <module name="TreeWalker">

        <!-- Make the @SuppressWarnings annotations available to Checkstyle -->
        <module name="SuppressWarningsHolder" />

        <!-- Checks for blocks. -->
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>
        <module name="AvoidNestedBlocks"/>

        <!-- Checks for class design. -->
        <module name="VisibilityModifier"/>
        <module name="InterfaceIsType"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="MutableException"/>
        <module name="ThrowsCount" />
        <module name="InnerTypeLast"/>

        <!-- Checks for common coding problems -->
        <module name="ArrayTrailingComma"/>
        <module name="AvoidInlineConditionals"/>
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
        </module>
        <module name="IllegalInstantiation"/>
        <module name="IllegalTokenText" />
        <module name="InnerAssignment"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="NestedForDepth"/>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="IllegalCatch"/>
        <module name="IllegalThrows"/>
        <module name="PackageDeclaration"/>
        <module name="ReturnCount">
            <property name="max" value="1"/>
        </module>
        <module name="IllegalType"/>
        <module name="ParameterAssignment"/>
        <module name="ExplicitInitialization"/>
        <module name="DefaultComesLast"/>
        <module name="FallThrough"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="RequireThis"/>
        <module name="UnnecessaryParentheses"/>
        <module name="OneStatementPerLine"/>

        <!-- Checks for imports. -->
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
        <module name="AvoidStarImport" />

        <module name="NoLineWrap"/>

        <!-- Checks for Javadoc comments. -->
        <module name="JavadocType">
            <property name="allowUnknownTags" value="true"/>
        </module>
        <module name="JavadocStyle"/>

        <!-- Metrics. -->
        <module name="BooleanExpressionComplexity"/>
        <module name="ClassDataAbstractionCoupling">
            <property name="max" value="20"/>
        </module>
        <module name="ClassFanOutComplexity">
            <!--
            Total number of classes that a particular class
            depends on. We're increasing this value because
            default "20" is too low.
            -->
            <property name="max" value="30"/>
        </module>
        <module name="CyclomaticComplexity"/>
        <module name="NPathComplexity"/>
        <module name="JavaNCSS"/>

        <!-- Miscellaneous other checks. -->
        <module name="TodoComment"/>
        <module name="UpperEll"/>
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters">
            <property name="tokens" value="CTOR_DEF,METHOD_DEF,FOR_EACH_CLAUSE,LITERAL_CATCH"/>
        </module>
        <module name="Indentation"/>
        <module name="CommentsIndentation"/>
        <module name="TrailingComment"/>
        <module name="OuterTypeFilename"/>

        <!-- Modifier Checks. -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for Naming Conventions. -->
        <module name="AbbreviationAsWordInNameCheck">
            <property name="allowedAbbreviations" value="IT"/>
            <property name="allowedAbbreviationLength" value="1"/>
        </module>
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName">
            <property name="format" value="^(id|[A-Za-z]{3,20})$"/>
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>
        <module name="LocalVariableName">
            <property name="format" value="^(i|j|k|id|[A-Za-z]{3,20})$"/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^(ex|[A-Za-z]{3,20})$"/>
        </module>
        <module name="MemberName">
            <property name="format" value="^(id|[A-Za-z]{3,20})$"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z]{2,}[a-zA-Z]+$"/>
        </module>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName">
            <property name="format" value="^(id|[A-Za-z]{3,})$"/>
        </module>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for Size Violations. -->
        <module name="ExecutableStatementCount">
            <property name="max" value="20"/>
        </module>
        <module name="AnonInnerLength" />
        <module name="MethodLength"/>
        <module name="ParameterNumber">
            <property name="max" value="3"/>
        </module>
        <module name="OuterTypeNumber"/>
        <module name="MethodCount"/>

        <!-- Checks for whitespace. -->
        <module name="GenericWhitespace"/>
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>

    </module>

</module>